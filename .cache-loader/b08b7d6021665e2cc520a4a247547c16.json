{"remainingRequest":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js??ref--7-1!/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js??ref--7-2!/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Send.tsx","dependencies":[{"path":"/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Send.tsx","mtime":1560467078000},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/cache-loader/dist/cjs.js","mtime":1561315137663},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js","mtime":1561315143281},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js","mtime":1561315137554}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Send.tsx"],"names":["React","observer","ReactJson","styles","useRootStore","LOCALSTORAGE_KEYS","DATA_FORMATS","send","localSocketIOEvents","localStorage","getItem","SOCKET_IO_EVENTS","initialSocketIOEvents","JSON","parse","length","slice","Send","socketStore","useState","content","setContent","textContent","setTextContent","jsonContent","setJsonContent","socketIOEvent","setSocketIOEvent","socketIOEvents","setSocketIOEvents","modalVisible","setModalVisible","canSend","useMemo","isSocketIO","socketIsConnected","sendingContent","dataFormat","toggleModalVisible","visible","handleOK","err","console","error","destroy","handleSubmit","includes","newSocketIOEvents","setItem","stringify","autoComplete","e","inputValue","option","props","children","toUpperCase","reset","btnCover","top","minRows","maxRows","target","value","padding","minHeight","maxHeight","overflow","borderRadius","wordWrap","wordBreak","updated_src"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { observer } from 'mobx-react'\nimport { Button, AutoComplete, Popconfirm, Modal, Input, message } from 'antd'\nimport ReactJson from 'react-json-view'\n\nimport * as styles from './index.scss'\nimport useRootStore from '@store/useRootStore'\nimport { LOCALSTORAGE_KEYS } from '@constants/index'\nimport { DATA_FORMATS } from '@constants/socket'\nimport { send } from '@services/websocket'\n\nconst localSocketIOEvents = localStorage.getItem(LOCALSTORAGE_KEYS.SOCKET_IO_EVENTS)\nlet initialSocketIOEvents: string[] = localSocketIOEvents ? JSON.parse(localSocketIOEvents) : []\nif (initialSocketIOEvents.length > 30) {\n    initialSocketIOEvents = initialSocketIOEvents.slice(0, 30)\n}\n\nfunction Send() {\n    const { socketStore } = useRootStore()\n\n    const [content, setContent] = React.useState('')\n    const [textContent, setTextContent] = React.useState('')\n    const [jsonContent, setJsonContent] = React.useState<PlainObject>({})\n    const [socketIOEvent, setSocketIOEvent] = React.useState('')\n    const [socketIOEvents, setSocketIOEvents] = React.useState(initialSocketIOEvents)\n    const [modalVisible, setModalVisible] = React.useState(false)\n\n    const canSend = React.useMemo(() => {\n        if (socketStore.isSocketIO && !socketIOEvent) {\n            return false\n        }\n        return socketStore.socketIsConnected\n    }, [socketStore.isSocketIO, socketIOEvent, socketStore.socketIsConnected])\n\n    const sendingContent = React.useMemo(\n        () => (socketStore.dataFormat === DATA_FORMATS[0] ? jsonContent : textContent),\n        [socketStore.dataFormat, jsonContent, textContent]\n    )\n\n    function toggleModalVisible() {\n        setModalVisible(visible => !visible)\n    }\n\n    function handleOK() {\n        try {\n            setJsonContent(JSON.parse(content))\n            toggleModalVisible()\n        } catch (err) {\n            console.error(err)\n            message.destroy()\n            message.error('Please input json string!')\n        }\n    }\n\n    function handleSubmit() {\n        if (!socketStore.isSocketIO) {\n            return send(null, sendingContent)\n        } else if (!socketIOEvent) {\n            message.destroy()\n            return message.error('Please input event name!')\n        }\n        if (!socketIOEvents.includes(socketIOEvent)) {\n            const newSocketIOEvents = [socketIOEvent, ...socketIOEvents]\n            setSocketIOEvents(newSocketIOEvents)\n            localStorage.setItem(LOCALSTORAGE_KEYS.SOCKET_IO_EVENTS, JSON.stringify(newSocketIOEvents))\n        }\n        send(socketIOEvent, sendingContent)\n    }\n\n    return (\n        <div>\n            {socketStore.isSocketIO && (\n                <AutoComplete\n                    className={styles.autoComplete}\n                    dataSource={socketIOEvents}\n                    placeholder=\"Input event name\"\n                    value={socketIOEvent}\n                    onChange={e => setSocketIOEvent(e as string)}\n                    filterOption={(inputValue, option) =>\n                        (option.props.children as string).toUpperCase().includes(inputValue.toUpperCase())\n                    }\n                />\n            )}\n            {socketStore.dataFormat === DATA_FORMATS[0] ? (\n                <div className={styles.content}>\n                    <div className={styles.reset}>\n                        <Popconfirm placement=\"topLeft\" title=\"Confirm to reset?\" onConfirm={() => setJsonContent({})}>\n                            <Button>Reset</Button>\n                        </Popconfirm>\n                        <Button className={styles.btnCover} type=\"primary\" onClick={toggleModalVisible}>\n                            Custom\n                        </Button>\n                        <Modal\n                            title=\"Custom data\"\n                            style={{ top: 20 }}\n                            visible={modalVisible}\n                            onOk={handleOK}\n                            onCancel={toggleModalVisible}\n                        >\n                            <Input.TextArea\n                                placeholder=\"Please input json string\"\n                                autosize={{ minRows: 4, maxRows: 10 }}\n                                value={content}\n                                onChange={({ target }) => setContent(target.value)}\n                            />\n                        </Modal>\n                    </div>\n                    <ReactJson\n                        name={false}\n                        theme=\"monokai\"\n                        style={{\n                            padding: 10,\n                            minHeight: 150,\n                            maxHeight: 500,\n                            overflow: 'auto',\n                            borderRadius: 3,\n                            wordWrap: 'break-word',\n                            wordBreak: 'break-all'\n                        }}\n                        onAdd={({ updated_src }) => setJsonContent(updated_src)}\n                        onEdit={({ updated_src }) => setJsonContent(updated_src)}\n                        onDelete={({ updated_src }) => setJsonContent(updated_src)}\n                        src={jsonContent}\n                    />\n                </div>\n            ) : (\n                <Input.TextArea\n                    className={styles.textContent}\n                    placeholder=\"Input your sending content\"\n                    autosize={{ minRows: 4, maxRows: 10 }}\n                    value={textContent}\n                    onChange={({ target }) => setTextContent(target.value)}\n                />\n            )}\n            <Button block size=\"large\" disabled={!canSend} type=\"primary\" onClick={handleSubmit}>\n                Send\n            </Button>\n        </div>\n    )\n}\n\nexport default observer(Send)\n"]}]}