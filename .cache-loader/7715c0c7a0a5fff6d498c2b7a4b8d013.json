{"remainingRequest":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js??ref--7-1!/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js??ref--7-2!/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Connect.tsx","dependencies":[{"path":"/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Connect.tsx","mtime":1560467078000},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/cache-loader/dist/cjs.js","mtime":1561315137663},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js","mtime":1561315143281},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js","mtime":1561315137554}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKaW1wb3J0ICJhbnRkL2xpYi9idXR0b24vc3R5bGUiOwppbXBvcnQgX0J1dHRvbiBmcm9tICJhbnRkL2xpYi9idXR0b24iOwppbXBvcnQgImFudGQvbGliL2NoZWNrYm94L3N0eWxlIjsKaW1wb3J0IF9DaGVja2JveCBmcm9tICJhbnRkL2xpYi9jaGVja2JveCI7CmltcG9ydCAiYW50ZC9saWIvaW5wdXQvc3R5bGUiOwppbXBvcnQgX0lucHV0IGZyb20gImFudGQvbGliL2lucHV0IjsKaW1wb3J0ICJhbnRkL2xpYi9tZXNzYWdlL3N0eWxlIjsKaW1wb3J0IF9tZXNzYWdlIGZyb20gImFudGQvbGliL21lc3NhZ2UiOwoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG9ic2VydmVyIH0gZnJvbSAnbW9ieC1yZWFjdCc7CmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL2luZGV4LnNjc3MnOwppbXBvcnQgdXNlUm9vdFN0b3JlIGZyb20gJ0BzdG9yZS91c2VSb290U3RvcmUnOwppbXBvcnQgeyBzb2NrZXRDb25uZWN0LCBzb2NrZXREaXNjb25uZWN0IH0gZnJvbSAnQHNlcnZpY2VzL3dlYnNvY2tldCc7CmltcG9ydCB7IExPQ0FMU1RPUkFHRV9LRVlTIH0gZnJvbSAnQGNvbnN0YW50cy9pbmRleCc7CgpmdW5jdGlvbiBDb25uZWN0KCkgewogIHZhciBfdXNlUm9vdFN0b3JlID0gdXNlUm9vdFN0b3JlKCksCiAgICAgIHNvY2tldFN0b3JlID0gX3VzZVJvb3RTdG9yZS5zb2NrZXRTdG9yZTsKCiAgdmFyIF9SZWFjdCR1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVlTLlNPQ0tFVF9VUkwpKSwKICAgICAgX1JlYWN0JHVzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF9SZWFjdCR1c2VTdGF0ZSwgMiksCiAgICAgIHVybCA9IF9SZWFjdCR1c2VTdGF0ZTJbMF0sCiAgICAgIHNldFVybCA9IF9SZWFjdCR1c2VTdGF0ZTJbMV07CgogIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShlKSB7CiAgICB2YXIgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTsKICAgIHNldFVybCh2YWx1ZSk7CiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTFNUT1JBR0VfS0VZUy5TT0NLRVRfVVJMLCB2YWx1ZSk7CiAgfQoKICBmdW5jdGlvbiBoYW5kbGVDb25uZWN0KCkgewogICAgaWYgKCF1cmwpIHsKICAgICAgX21lc3NhZ2UuZGVzdHJveSgpOwoKICAgICAgcmV0dXJuIF9tZXNzYWdlLmVycm9yKCdQbGVhc2UgaW5wdXQgc29ja2V0IHVybCEnKTsKICAgIH0KCiAgICBzb2NrZXRDb25uZWN0KHVybCk7CiAgICBzb2NrZXRTdG9yZS5jbGVhck1lc3NhZ2VzKCk7CiAgfQoKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMuY29udGFpbmVyCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMuY29ubmVjdAogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX0lucHV0LCB7CiAgICBjbGFzc05hbWU6IHN0eWxlcy5zb2NrZXRVcmxJbnB1dCwKICAgIHZhbHVlOiB1cmwsCiAgICBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlCiAgfSksIHNvY2tldFN0b3JlLmlzU29ja2V0SU8gJiYgUmVhY3QuY3JlYXRlRWxlbWVudChfQ2hlY2tib3gsIHsKICAgIGRpc2FibGVkOiBzb2NrZXRTdG9yZS5zb2NrZXRJc0Nvbm5lY3RlZCwKICAgIGNsYXNzTmFtZTogc3R5bGVzLmNoZWNrYm94LAogICAgY2hlY2tlZDogc29ja2V0U3RvcmUubm90U3VwcG9ydFBvbGxpbmcsCiAgICBvbkNoYW5nZTogZSA9PiBzb2NrZXRTdG9yZS5zZXROb3RTdXBwb3J0UG9sbGluZyhlLnRhcmdldC5jaGVja2VkKQogIH0sICJubyBwb2xsaW5nIiksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX0J1dHRvbiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMuYnRuLAogICAgdHlwZTogInByaW1hcnkiLAogICAgb25DbGljazogaGFuZGxlQ29ubmVjdCwKICAgIGRpc2FibGVkOiBzb2NrZXRTdG9yZS5zb2NrZXRJc0Nvbm5lY3RlZAogIH0sICJjb25uZWN0IiksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX0J1dHRvbiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMuYnRuLAogICAgdHlwZTogImRhbmdlciIsCiAgICBvbkNsaWNrOiBzb2NrZXREaXNjb25uZWN0LAogICAgZGlzYWJsZWQ6ICFzb2NrZXRTdG9yZS5zb2NrZXRJc0Nvbm5lY3RlZAogIH0sICJkaXNjb25uZWN0IikpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJibG9ja3F1b3RlIiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMudGlwcwogIH0sICJwcm90b2NvbC8vaXAgb3IgZG9tYWluOmhvc3QgKGV4YW1wbGU6IiwgJyAnLCBzb2NrZXRTdG9yZS5pc1NvY2tldElPID8gJ3dzczovL3Nob3djYXNlLmphY2twbGUuY29tJyA6ICd3czovLzEyNy4wLjAuMTozMDAxJywgIikiKSk7Cn0KCmV4cG9ydCBkZWZhdWx0IG9ic2VydmVyKENvbm5lY3QpOw=="},{"version":3,"sources":["/Users/gabrielregis/react-spectrum-control-panel/src/containers/views/SocketDebugger/Handler/Connect.tsx"],"names":["React","observer","styles","useRootStore","socketConnect","socketDisconnect","LOCALSTORAGE_KEYS","Connect","socketStore","useState","localStorage","getItem","SOCKET_URL","url","setUrl","handleChange","e","value","target","setItem","handleConnect","destroy","error","clearMessages","container","connect","socketUrlInput","isSocketIO","socketIsConnected","checkbox","notSupportPolling","setNotSupportPolling","checked","btn","tips"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,qBAAhD;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,SAASC,OAAT,GAAmB;AAAA,sBACSJ,YAAY,EADrB;AAAA,MACPK,WADO,iBACPA,WADO;;AAAA,wBAGOR,KAAK,CAACS,QAAN,CAAeC,YAAY,CAACC,OAAb,CAAqBL,iBAAiB,CAACM,UAAvC,CAAf,CAHP;AAAA;AAAA,MAGRC,GAHQ;AAAA,MAGHC,MAHG;;AAKf,WAASC,YAAT,CAAsBC,CAAtB,EAA8D;AAAA,QAClDC,KADkD,GACxCD,CAAC,CAACE,MADsC,CAClDD,KADkD;AAE1DH,IAAAA,MAAM,CAACG,KAAD,CAAN;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqBb,iBAAiB,CAACM,UAAvC,EAAmDK,KAAnD;AACH;;AAED,WAASG,aAAT,GAAyB;AACrB,QAAI,CAACP,GAAL,EAAU;AACN,eAAQQ,OAAR;;AACA,aAAO,SAAQC,KAAR,CAAc,0BAAd,CAAP;AACH;;AACDlB,IAAAA,aAAa,CAACS,GAAD,CAAb;AACAL,IAAAA,WAAW,CAACe,aAAZ;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB;AAAvB,KACI;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAvB,KACI;AAAO,IAAA,SAAS,EAAEvB,MAAM,CAACwB,cAAzB;AAAyC,IAAA,KAAK,EAAEb,GAAhD;AAAqD,IAAA,QAAQ,EAAEE;AAA/D,IADJ,EAEKP,WAAW,CAACmB,UAAZ,IACG;AACI,IAAA,QAAQ,EAAEnB,WAAW,CAACoB,iBAD1B;AAEI,IAAA,SAAS,EAAE1B,MAAM,CAAC2B,QAFtB;AAGI,IAAA,OAAO,EAAErB,WAAW,CAACsB,iBAHzB;AAII,IAAA,QAAQ,EAAEd,CAAC,IAAIR,WAAW,CAACuB,oBAAZ,CAAiCf,CAAC,CAACE,MAAF,CAASc,OAA1C;AAJnB,kBAHR,EAYI;AACI,IAAA,SAAS,EAAE9B,MAAM,CAAC+B,GADtB;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,OAAO,EAAEb,aAHb;AAII,IAAA,QAAQ,EAAEZ,WAAW,CAACoB;AAJ1B,eAZJ,EAoBI;AACI,IAAA,SAAS,EAAE1B,MAAM,CAAC+B,GADtB;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,OAAO,EAAE5B,gBAHb;AAII,IAAA,QAAQ,EAAE,CAACG,WAAW,CAACoB;AAJ3B,kBApBJ,CADJ,EA8BI;AAAY,IAAA,SAAS,EAAE1B,MAAM,CAACgC;AAA9B,8CAC0C,GAD1C,EAEK1B,WAAW,CAACmB,UAAZ,GAAyB,4BAAzB,GAAwD,qBAF7D,MA9BJ,CADJ;AAqCH;;AAED,eAAe1B,QAAQ,CAACM,OAAD,CAAvB","sourcesContent":["import * as React from 'react'\nimport { observer } from 'mobx-react'\nimport { message, Input, Button, Checkbox } from 'antd'\n\nimport * as styles from './index.scss'\nimport useRootStore from '@store/useRootStore'\nimport { socketConnect, socketDisconnect } from '@services/websocket'\nimport { LOCALSTORAGE_KEYS } from '@constants/index'\n\nfunction Connect() {\n    const { socketStore } = useRootStore()\n\n    const [url, setUrl] = React.useState(localStorage.getItem(LOCALSTORAGE_KEYS.SOCKET_URL))\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n        const { value } = e.target\n        setUrl(value)\n        localStorage.setItem(LOCALSTORAGE_KEYS.SOCKET_URL, value)\n    }\n\n    function handleConnect() {\n        if (!url) {\n            message.destroy()\n            return message.error('Please input socket url!')\n        }\n        socketConnect(url)\n        socketStore.clearMessages()\n    }\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.connect}>\n                <Input className={styles.socketUrlInput} value={url} onChange={handleChange} />\n                {socketStore.isSocketIO && (\n                    <Checkbox\n                        disabled={socketStore.socketIsConnected}\n                        className={styles.checkbox}\n                        checked={socketStore.notSupportPolling}\n                        onChange={e => socketStore.setNotSupportPolling(e.target.checked)}\n                    >\n                        no polling\n                    </Checkbox>\n                )}\n                <Button\n                    className={styles.btn}\n                    type=\"primary\"\n                    onClick={handleConnect}\n                    disabled={socketStore.socketIsConnected}\n                >\n                    connect\n                </Button>\n                <Button\n                    className={styles.btn}\n                    type=\"danger\"\n                    onClick={socketDisconnect}\n                    disabled={!socketStore.socketIsConnected}\n                >\n                    disconnect\n                </Button>\n            </div>\n            <blockquote className={styles.tips}>\n                protocol//ip or domain:host (example:{' '}\n                {socketStore.isSocketIO ? 'wss://showcase.jackple.com' : 'ws://127.0.0.1:3001'})\n            </blockquote>\n        </div>\n    )\n}\n\nexport default observer(Connect)\n"]}]}