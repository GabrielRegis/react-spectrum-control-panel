{"remainingRequest":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js??ref--7-1!/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js??ref--7-2!/Users/gabrielregis/react-spectrum-control-panel/src/store/userStore/index.ts","dependencies":[{"path":"/Users/gabrielregis/react-spectrum-control-panel/src/store/userStore/index.ts","mtime":1560467078000},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/cache-loader/dist/cjs.js","mtime":1561315137663},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/thread-loader/dist/cjs.js","mtime":1561315143281},{"path":"/Users/gabrielregis/react-spectrum-control-panel/node_modules/babel-loader/lib/index.js","mtime":1561315137554}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/gabrielregis/react-spectrum-control-panel/src/store/userStore/index.ts"],"names":["observable","action","runInAction","StoreExt","UserStore","createUser","user","api","modifyUser","deleteUser","_id","getUsers","handleTableChange","pagination","current","pageSize","pageIndex","changePageIndex","changePageSize","getUsersloading","res","users","total"],"mappings":"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","sourcesContent":["import { observable, action, runInAction } from 'mobx'\nimport { PaginationConfig } from 'antd/lib/pagination'\n\nimport { StoreExt } from '@utils/reactExt'\n\nexport class UserStore extends StoreExt {\n    /**\n     * 加载用户列表时的loading\n     *\n     * @type {boolean}\n     * @memberof UserStore\n     */\n    @observable\n    getUsersloading: boolean = false\n    /**\n     * 用户列表\n     *\n     * @type {IUserStore.IUser[]}\n     * @memberof UserStore\n     */\n    @observable\n    users: IUserStore.IUser[] = []\n    /**\n     * table pageIndex\n     *\n     * @type {number}\n     * @memberof UserStore\n     */\n    @observable\n    pageIndex: number = 1\n    /**\n     * table pageSize\n     *\n     * @type {number}\n     * @memberof UserStore\n     */\n    @observable\n    pageSize: number = 30\n    /**\n     * users total\n     *\n     * @type {number}\n     * @memberof UserStore\n     */\n    @observable\n    total: number = 0\n\n    /**\n     * 加载用户列表\n     *\n     * @memberof UserStore\n     */\n    @action\n    getUsers = async () => {\n        this.getUsersloading = true\n        try {\n            const res = await this.api.user.getUsers({ pageIndex: this.pageIndex, pageSize: this.pageSize })\n            runInAction('SET_USER_LIST', () => {\n                this.users = res.users\n                this.total = res.total\n            })\n        } catch (err) {}\n        runInAction('HIDE_USER_LIST_LOADING', () => {\n            this.getUsersloading = false\n        })\n    }\n\n    createUser = async (user: IUserStore.IUser) => {\n        await this.api.user.createUser(user)\n    }\n\n    modifyUser = async (user: IUserStore.IUser) => {\n        await this.api.user.modifyUser(user)\n    }\n\n    deleteUser = async (_id: string) => {\n        await this.api.user.deleteUser({ _id })\n        this.getUsers()\n    }\n\n    @action\n    changePageIndex = (pageIndex: number) => {\n        this.pageIndex = pageIndex\n        this.getUsers()\n    }\n\n    @action\n    changePageSize = (pageSize: number) => {\n        this.pageSize = pageSize\n        this.getUsers()\n    }\n\n    handleTableChange = (pagination: PaginationConfig) => {\n        const { current, pageSize } = pagination\n        if (current !== this.pageIndex) {\n            this.changePageIndex(current)\n        }\n        if (pageSize !== this.pageSize) {\n            this.changePageSize(pageSize)\n        }\n    }\n}\n\nexport default new UserStore()\n"]}]}